buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2')
	}

}

plugins {
    id 'com.palantir.docker-run' version '0.19.2'
    id 'com.palantir.docker' version '0.19.2'
}


apply plugin: "com.palantir.docker-run"
apply plugin: "com.palantir.docker"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.mattmartin.faithbible'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('com.github.vanroy:spring-boot-starter-data-jest:3.1.2.RELEASE')
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6" // for serialization of LocalDateTime in Java 8
    compile('io.springfox:springfox-swagger2:2.8.0')
    compile("io.springfox:springfox-swagger-ui:2.0.2")
    compile('org.springframework.boot:spring-boot-starter-actuator')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
tasks.findByName('dockerRemoveContainer').dependsOn('dockerStop')
tasks.findByName('dockerRun').dependsOn('dockerRemoveContainer')
//tasks.findByName('test').dependsOn('dockerRun')
task runLocal(dependsOn: 'dockerRun'){
    doLast {
        println 'launching docker... be patient'
        sleep(15000)
    }
}

runLocal.finalizedBy('bootRun')

docker {
    dependsOn(build)
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

configurations {
    runtime.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"

    dockerRun {
        name 'elasticsearch'
        image 'docker.elastic.co/elasticsearch/elasticsearch:6.2.4'
        ports '9200:9200', '9300:9300'
        daemonize true
        env 'discovery.type': 'single-node'
    }



}